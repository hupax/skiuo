version: '3.8'

# Development override for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  # Development: expose more ports and enable hot-reload
  core-service:
    build:
      context: ./core-service
      dockerfile: Dockerfile.dev
    environment:
      SPRING_PROFILES_ACTIVE: development
      SPRING_DEVTOOLS_RESTART_ENABLED: "true"
    volumes:
      - ./core-service/src:/app/src
      - maven-cache:/root/.m2
    command: mvn spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    ports:
      - "8080:8080"
      - "9090:9090"
      - "5005:5005"  # Java debug port

  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./ai-service/app:/app/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      LOG_LEVEL: DEBUG
    ports:
      - "8000:8000"

  signaling-service:
    build:
      context: ./signaling-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./signaling-service/src:/app/src
      - /app/node_modules  # Prevent overwriting node_modules
    command: npm run dev
    environment:
      NODE_ENV: development
      LOG_LEVEL: debug
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js debug port

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0
    environment:
      NODE_ENV: development
    ports:
      - "5173:5173"

  # Add pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: streammind-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@streammind.dev
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - streammind-network

  # Add Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: streammind-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - streammind-network

volumes:
  maven-cache:
