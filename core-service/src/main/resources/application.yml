spring:
  application:
    name: core-service

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/streammind}
    username: ${SPRING_DATASOURCE_USERNAME:streammind}
    password: ${SPRING_DATASOURCE_PASSWORD:javapostgres}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false

  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      timeout: 2000ms

  security:
    jwt:
      secret: ${JWT_SECRET:dev-secret-key-change-in-production}
      expiration: 86400000  # 24 hours in milliseconds

server:
  port: ${SERVER_PORT:8080}

# Spring Boot Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  health:
    defaults:
      enabled: true

# gRPC Server Configuration
grpc:
  server:
    port: ${GRPC_SERVER_PORT:9090}

# Logging
logging:
  level:
    root: INFO
    com.skiuo.streammind: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Application Configuration
app:
  # 视频存储配置
  video:
    storage-dir: ${VIDEO_STORAGE_DIR:/tmp/videos}  # 视频临时存储目录
    max-file-size: ${VIDEO_MAX_FILE_SIZE:100MB}    # 单个视频文件最大大小

  # Python AI 服务配置
  python-ai:
    url: ${PYTHON_AI_URL:http://localhost:8000}    # Python AI 服务地址

  # Worker 线程池配置
  worker:
    thread-count: ${WORKER_THREAD_COUNT:2}         # Worker 线程数（根据CPU和AI服务能力调整）

# Spring Boot Multipart 配置
spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: ${VIDEO_MAX_FILE_SIZE:100MB}
      max-request-size: ${VIDEO_MAX_FILE_SIZE:100MB}
